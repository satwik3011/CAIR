function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 18-May-2021 22:34:06.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx10 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx1 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [0;0;0;0;0;0;0;0;0;0];
x1_step1.gain = [2;2;2;2;2;2;2;2;2;2];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.4824119111808713445;-1.0108340313283741274;-0.88518853500481808894;1.62954822937740329;1.2971452980537212518;-1.3370815972931759941;-2.2029484784307693523;-1.4653911066906566418;-2.0874582989276007083;2.5557838390305329668];
IW1_1 = [0.2747661539349243176 -0.33152690379711202695 -0.84496307317324470532 -0.68684574348624349849 0.72317939943877951325 -0.078752909628241260509 0.42004076220667779795 1.2953141063959536794 -0.37842219020419315401 0.22319151199256662133;0.41390097603891778943 0.27904158238770687683 -0.74899229334665307078 0.25457839037214546885 -0.21775908748982925056 -1.1442869049567947481 0.46824750286740579597 -1.0504921354425675872 -0.65215390183522636836 0.12494813944849045284;0.58750598496361317036 -0.69485674538716724058 -0.55715306945799447647 -0.096592459152008369738 0.17267574952029807189 -0.39621180530241734141 0.66613771418275280478 -0.20358494009907601718 0.7930878856812106914 -0.89039946960677318621;-0.25040897094654296362 0.37859109810898466941 0.39751123113326869429 -0.21874765159041048568 -0.33581683562533976017 -0.48573282933892153457 0.049100823798404337472 -0.48832213464107965262 -0.31676981901391815244 0.19639055210507061489;0.25888839192747264972 -0.18437162866871859013 -0.24448549174348929713 0.47480979965326808312 -0.4454371316101830014 0.34349561066629463735 -0.63118956250527924468 0.64403098983392392807 0.21991169040983618577 -0.032346576366804394298;0.33615576271748859316 -0.10188767639304979751 0.41853837946190797226 0.16711127953047924533 -0.24754585206242377127 -0.23361422774856516194 -0.67227692892409085523 -0.77231044419868255524 -0.22619359101728789274 -0.055545233672076803344;-0.21442426626982530324 0.038426664529529079573 -0.24149069073357934401 0.10203104209784993883 0.035927378150244923538 0.033982209244384525837 0.21790126267913195734 0.17971223512013070889 0.028737157983392960098 0.18393211484637095321;-0.53591379133653682665 0.47553217000676345494 0.53909554282194971364 0.56898951230906791299 0.46503471625030057268 -0.3588269987939318173 -0.47807768490455171406 0.49630841753769078251 -0.30593885263064057867 -0.020222259905835007071;-0.015412616481055657625 0.4596900789433336354 -0.14575203915227280538 -0.20288714368866028748 -0.56544947615005647368 0.17171954417746523869 0.27314082668974354329 0.39276932078576520802 -0.2464329836154802722 -0.33801068699486069846;0.37505093048360249597 0.14733379281541808536 -0.27860724842830875136 0.19353720130790633136 0.17843518731712604275 -0.23876839528065216256 0.11659073345426114454 -0.38467702666616127027 0.1778887385891108619 -0.31880653125728480868];

% Layer 2
b2 = -3.7113057218901146506;
LW2_1 = [0.5508620362992414643 0.16699178098715311558 0.39949518744909889856 -1.6334111953047847354 -1.0665378743463125311 1.353032436235953595 3.1917688242275770172 0.97010792530047507132 1.8346783149844481109 -3.2837316128821796291];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = logsig_apply(repmat(b2,1,Q) + LW2_1*a1);
    
    % Output 1
    Y{1,ts} = a2;
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Positive Transfer Function
function a = logsig_apply(n,~)
a = 1 ./ (1 + exp(-n));
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end
